---
export const prerender = false;

import Layout from "../../../../layouts/Layout.astro";
import { getEntry, getCollection } from 'astro:content';

const { chapter, section, page } = Astro.params;

const slug: string = chapter + "/" + section + "/" + page
const entries = await getCollection("guides")

if ((entries.map((entry) => entry.slug) as string[]).indexOf(slug) == -1) {
    return Astro.redirect("/404")
}

const sectionEntries = new Map()
entries.forEach((entry) => {
    let firstSlash = entry.slug.indexOf("/")
    let secondSlash = entry.slug.indexOf("/", firstSlash + 1)
    let entrySection = entry.slug.substring(firstSlash + 1, secondSlash)

    if (sectionEntries.has(entrySection)) {
        let existingArray: [string, number, string | null][] = sectionEntries.get(entrySection)
        let toPush: [string, number, string | null] = [entry.data.title, entry.data.order, (entry.slug == slug ? null : entry.slug)]
        existingArray.push(toPush)
        sectionEntries.set(entrySection, existingArray)
    } else {
        sectionEntries.set(entrySection, [[entry.data.title, entry.data.order, (entry.slug == slug ? null : entry.slug)]])
    }
})


const entry = await getEntry("guides", slug)

const { Content, headings } = await entry!.render()
---

<Layout title={ entry!.data.title }>
    <div class={"flex flex-grow px-48 py-12 gap-x-8"}>
        <div class={"bg-background-800 px-4 py-4 min-w-fit text-left rounded-xl"}>
            <div class={"min-w-32 flex flex-col gap-y-3.5"}>
                {
                    Array.from(sectionEntries).map(([key, value]) => {
                        return (
                            <div>
                                <h3 class={"capitalize border-b-2 border-accent-600 mb-2"}>{ key }</h3>
                                <div class={"flex flex-col gap-y-1"}>
                                    { (value as [string, number, string | null][]).sort((element1, element2) => {
                                        let order1 = element1[1]
                                        let order2 = element2[1]
                                        if (order1 < order2) {
                                            return -1
                                        } else if (order1 > order2) {
                                            return 1
                                        } else {
                                            return 0
                                        }
                                    }).map(([title, _, slug]) => {
                                        return (
                                            (slug == null ?
                                                            <a class={"px-3.5 py-2 bg-accent-500 rounded-md"}>
                                                                <p>{ title }</p>
                                                            </a>
                                                    :
                                                            <a class={"px-3.5 py-2 hover:bg-accent-700 rounded-md"}
                                                               href={"/docs/" + slug}>
                                                                <p>{ title }</p>
                                                            </a>
                                            )
                                        )
                                    }) }
                                </div>
                            </div>
                        )
                    })
                }
            </div>
        </div>
        <div class={"content flex flex-col gap-y-2.5"}>
            <Content/>
        </div>
    </div>
</Layout>

<style is:global>
    .content > h1 {
        @apply text-5xl
    }
</style>


